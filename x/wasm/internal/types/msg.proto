syntax = "proto3";
package wasmd.x.wasmd.v1beta1;


import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "x/wasm/internal/types/types.proto";

option go_package = "github.com/CosmWasm/wasmd/x/wasmd/internal/types";
option (gogoproto.goproto_getters_all) = false;


// MsgStoreCode submit Wasm code to the system
message MsgStoreCode {
    // Sender is the that actor that signed the messages
    bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // WASMByteCode can be raw or gzip compressed
    bytes wasm_byte_code = 2 [(gogoproto.customname) = "WASMByteCode"];
    // Source is a valid absolute HTTPS URI to the contract's source code, optional
    string source = 3;
    // Builder is a valid docker image name with tag, optional
    string builder = 4;
    // InstantiatePermission access control to apply on contract creation, optional
    AccessConfig instantiate_permission = 5;
}

// MsgInstantiateContract create a new smart contract instance for the given code id.
message MsgInstantiateContract {
    // Sender is the that actor that signed the messages
    bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // Admin is an optional address that can execute migrations
    bytes admin = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // CodeID is the reference to the stored WASM code
    uint64 code_id = 3 [(gogoproto.customname) = "CodeID"];
    // Label is optional metadata to be stored with a contract instance.
    string label = 4;
    // InitMsg json encoded message to be passed to the contract on instantiation
    bytes init_msg = 5 [(gogoproto.casttype) = "encoding/json.RawMessage"];
    // InitFunds coins that are transferred to the contract on instantiation
    repeated cosmos.base.v1beta1.Coin init_funds = 6 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// MsgExecuteContract submits the given message data to a smart contract
message MsgExecuteContract {
    // Sender is the that actor that signed the messages
    bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // Contract is the address of the smart contract
    bytes contract = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // Msg json encoded message to be passed to the contract
    bytes msg = 3 [(gogoproto.casttype) = "encoding/json.RawMessage"];
    // SentFunds coins that are transferred to the contract on execution
    repeated cosmos.base.v1beta1.Coin sent_funds = 5 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// MsgMigrateContract runs a code upgrade/ downgrade for a smart contract
message MsgMigrateContract {
    // Sender is the that actor that signed the messages
    bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // Contract is the address of the smart contract
    bytes contract = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // CodeID references the new WASM code
    uint64 code_id = 3 [(gogoproto.customname) = "CodeID"];
    // MigrateMsg json encoded message to be passed to the contract on migration
    bytes migrate_msg = 4 [(gogoproto.casttype) = "encoding/json.RawMessage"];
}

// MsgUpdateAdmin sets a new admin for a smart contract
message MsgUpdateAdmin {
    // Sender is the that actor that signed the messages
    bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // NewAdmin address to be set
    bytes new_admin = 2 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // Contract is the address of the smart contract
    bytes contract = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}


// MsgClearAdmin removes any admin stored for a smart contract
message MsgClearAdmin {
    // Sender is the that actor that signed the messages
    bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
    // Contract is the address of the smart contract
    bytes contract = 3 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}
