run:
  tests: true
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

linters:
  disable-all: true
  enable:
    - bodyclose
    - depguard
    - dogsled
    - errcheck
    - exportloopref
    - goconst
    - gocritic
    - gofumpt
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - nakedret
    - nolintlint
    - revive
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused

issues:
  exclude-rules:
    - text: "simtypes"
      linters:
        - staticcheck
    - text: "Use of weak random number generator"
      linters:
        - gosec
    - text: "ST1003:"
      linters:
        - stylecheck
    # FIXME: Disabled until golangci-lint updates stylecheck with this fix:
    # https://github.com/dominikh/go-tools/issues/389
    - text: "ST1016:"
      linters:
        - stylecheck
    - path: "migrations"
      text: "SA1019:"
      linters:
        - staticcheck

  max-issues-per-linter: 10000
  max-same-issues: 10000

linters-settings:
  revive:
    enableAllRules: true

    # When set to false, ignores files with "GENERATED" header, similar to golint
    ignoreGeneratedHeader: true

    # Sets the default severity to "warning"
    severity: "warning"

    # Sets the default failure confidence. This means that linting errors
    # with less than 0.8 confidence will be ignored.
    confidence: 0.8

    # Sets the error code for failures with severity "error"
    errorCode: 0

    # Sets the error code for failures with severity "warning"
    warningCode: 0

    # Configuration of the `cyclomatic` rule. Here we specify that
    # the rule should fail if it detects code with higher complexity than 10.
    rule.cyclomatic:
      arguments: [10]

    # Sets the severity of the `package-comments` rule to "error".
    rule.package-comments: severity = "error"

  nolintlint:
    allow-unused: false
    allow-leading-space: true
    require-explanation: false
    require-specific: false
