syntax = "proto3";
package cosmwasm.wasm.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/CosmWasm/wasmd/x/wasm/types";

// ContractExecutionAuthorization defines authorization for wasm execute.
message ContractExecutionAuthorization {
  option (cosmos_proto.implements_interface) = "Authorization";

  repeated ContractExecutionGrant grants = 1 [ (gogoproto.nullable) = false ];

  // ContractExecutionGrant a granted execute permission for a single contract
  message ContractExecutionGrant {
    // Contract is the address of the smart contract
    string contract = 1;

    // ExecutionLimit specifies number of executions or spendable amounts
    oneof execution_limit {
      InfiniteCalls infinite_calls = 2;
      MaxCalls max_calls = 3;
      MaxFunds max_funds = 4;
    }

    // Filter rules to apply
    oneof filter {
      AcceptedMessageKeysFilter accepted_message_keys = 5;
      AllowAllWildcard allow_all_wildcard = 6;
    }
  }
}

// ContractMigrationAuthorization defines authorization for wasm contract
// migration.
message ContractMigrationAuthorization {
  option (cosmos_proto.implements_interface) = "Authorization";

  repeated ContractMigrationGrant grants = 1 [ (gogoproto.nullable) = false ];

  // ContractExecutionGrant a granted migrate permission for a single contract
  message ContractMigrationGrant {
    // Contract is the address of the smart contract
    string contract = 1;

    // MaxExecutions specifies the number of authorized migrations remaining
    oneof max_executions {
      InfiniteCalls infinite_calls = 2;
      MaxCalls max_calls = 3;
    }
  }
}

// InfiniteCalls unlimited number of calls
message InfiniteCalls {}

// MaxCalls limited number of calls
message MaxCalls {
  // Remaining number that is decremented on each execution
  uint64 remaining = 1;
}

// MaxFunds defines the max amounts that can be sent to a contract
message MaxFunds {
  repeated cosmos.base.v1beta1.Coin amounts = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// AllowAllWildcard is a wildcard to allow any type of contract execution
// message
message AllowAllWildcard {}

// AcceptedMessageKeysFilter accept specific contract message keys in the json
// object that can be executed
message AcceptedMessageKeysFilter {
  // Messages is the list of unique keys
  repeated string messages = 1;
}
